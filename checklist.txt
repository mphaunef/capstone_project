-login logic x
    if authenticated, redirect to homepage x
-create user logic x 
    once created, redirect to homepage as logged in user? x 
    or? make user log in again using new information x 
-form.get / request.get + session[] in server.py x  


spotify api: x 
user authentication x 
get several playlist request using api x 
randomly choose a playlist x 
randomly choose a song inside playlist x 
use "recommended" endpoint based on randomly chosen song to return a new song  x 



user authentication: 
????? implicit ?
-redirect to new page with button to sign in with spotify after logging in x 
-ajax to handle on click? x 
- once logged in redirect to homepage with user token information (spotify) and user information (database) x

- store spotify id in databse ???
get users playlists: x 
 	get /v1/users/{user_id}/playlists 
    .random to choose 1 playlist id
    30XoqT3eqbI5b6AwL6xeUs
get/store(?) songs based on chosen playlist: x 
    get /v1/playlists/{playlist_id}/tracks 
    .random to choose 1 song id, artist id, and genre id
     song id : 41NDVWdAb4YFMAaMB950zu
     artist id : 4XVxeuUkJRiCYJYdqRpwab
     genre id : user chosen genre from form (string) - dropdown menu ???
        https://developer.spotify.com/console/get-available-genre-seeds/



get recommendation based on song id, artist id, genre id: x 
    get 	https://api.spotify.com/v1/recommendations 


finally: x 

if SONG ID ALREADY EXISTS IN DATABASE DO EVERYTHING AGAIN : )




>crud function for adding song by choosen genre x 
>add logic to not play song if its in database per user x 
>user profile x 
    show existing genres for that specific user AS buttons x 
    THEN can click into genre x 
    once in genre, display all songs in genre from users x 


>navigation bar x 
>forgot password/username x 

